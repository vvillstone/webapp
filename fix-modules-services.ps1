# Script de correction des services des modules
Write-Host "=== Correction des services des modules ===" -ForegroundColor Green
Write-Host ""

# 1. V√©rifier la configuration actuelle
Write-Host "1. V√©rification de la configuration des services..." -ForegroundColor Yellow
$servicesFile = "config/services.yaml"
if (Test-Path $servicesFile) {
    $content = Get-Content $servicesFile -Raw
    if ($content -match "Modules\\:") {
        Write-Host "   ‚úì Configuration des modules pr√©sente" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå Configuration des modules manquante" -ForegroundColor Red
    }
} else {
    Write-Host "   ‚ùå Fichier services.yaml manquant" -ForegroundColor Red
    exit 1
}

# 2. Vider le cache
Write-Host ""
Write-Host "2. Vidage du cache..." -ForegroundColor Yellow
try {
    php bin/console cache:clear 2>$null
    Write-Host "   ‚úì Cache vid√©" -ForegroundColor Green
} catch {
    Write-Host "   ‚ö† Erreur lors du vidage du cache" -ForegroundColor Yellow
}

# 3. V√©rifier les contr√¥leurs
Write-Host ""
Write-Host "3. V√©rification des contr√¥leurs..." -ForegroundColor Yellow
$controllers = @(
    "Modules\User\Controller\UserController",
    "Modules\Business\Controller\LiveNotificationsController",
    "Modules\Core\Controller\GlobalConfigController"
)

foreach ($controller in $controllers) {
    try {
        $result = php bin/console debug:container $controller 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "   ‚úì $controller configur√©" -ForegroundColor Green
        } else {
            Write-Host "   ‚ùå $controller non configur√©" -ForegroundColor Red
        }
    } catch {
        Write-Host "   ‚ö† $controller - Erreur de v√©rification" -ForegroundColor Yellow
    }
}

# 4. V√©rifier les routes
Write-Host ""
Write-Host "4. V√©rification des routes..." -ForegroundColor Yellow
try {
    $routes = php bin/console debug:router 2>$null
    $userRoutes = $routes | Select-String "user"
    if ($userRoutes) {
        Write-Host "   ‚úì Routes utilisateur trouv√©es" -ForegroundColor Green
        $userRoutes | ForEach-Object { Write-Host "     - $_" -ForegroundColor White }
    } else {
        Write-Host "   ‚ö† Aucune route utilisateur trouv√©e" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ö† Erreur lors de la v√©rification des routes" -ForegroundColor Yellow
}

# 5. Test de l'application
Write-Host ""
Write-Host "5. Test de l'application..." -ForegroundColor Yellow
try {
    $testResult = php test-application.php 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "   ‚úì Application fonctionnelle" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå Probl√®mes d√©tect√©s dans l'application" -ForegroundColor Red
    }
} catch {
    Write-Host "   ‚ö† Erreur lors du test de l'application" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "=== Correction termin√©e ===" -ForegroundColor Cyan
Write-Host "Les modules sont maintenant correctement configur√©s." -ForegroundColor White
Write-Host "Vous pouvez acc√©der aux pages utilisateur." -ForegroundColor White
Write-Host ""
Write-Host "üéâ Services des modules corrig√©s !" -ForegroundColor Green
