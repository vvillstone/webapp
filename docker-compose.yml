version: '3.8'

services:
  # Base de données MySQL
  database:
    image: mysql:8.0
    container_name: symfony_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: symfony_app
      MYSQL_USER: symfony_user
      MYSQL_PASSWORD: symfony_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - symfony_network
    command: --default-authentication-plugin=mysql_native_password

  # PHP-FPM
  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: symfony_php
    restart: unless-stopped
    volumes:
      - .:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - database
    networks:
      - symfony_network
    environment:
      - DATABASE_URL=mysql://symfony_user:symfony_password@database:3306/symfony_app?serverVersion=8.0

  # Nginx
  nginx:
    image: nginx:alpine
    container_name: symfony_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - php
    networks:
      - symfony_network

  # Mercure Hub
  mercure:
    image: dunglas/mercure
    container_name: symfony_mercure
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - MERCURE_PUBLISHER_JWT_KEY=!ChangeThisMercureHubJWTSecretKey!
      - MERCURE_SUBSCRIBER_JWT_KEY=!ChangeThisMercureHubJWTSecretKey!
      - MERCURE_EXTRA_DIRECTIVES=cors_origins=*
    volumes:
      - mercure_data:/data
    networks:
      - symfony_network

  # Redis pour Messenger
  redis:
    image: redis:7-alpine
    container_name: symfony_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - symfony_network

  # MailHog pour les emails en développement
  mailhog:
    image: mailhog/mailhog:latest
    container_name: symfony_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - symfony_network

volumes:
  mysql_data:
    driver: local
  mercure_data:
    driver: local
  redis_data:
    driver: local

networks:
  symfony_network:
    driver: bridge
