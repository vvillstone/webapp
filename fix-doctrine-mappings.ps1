# Script de correction des mappings Doctrine
Write-Host "=== Correction des mappings Doctrine ===" -ForegroundColor Green
Write-Host ""

# 1. V√©rifier la configuration actuelle
Write-Host "1. V√©rification de la configuration Doctrine..." -ForegroundColor Yellow
$doctrineFile = "config/packages/doctrine.yaml"
if (Test-Path $doctrineFile) {
    $content = Get-Content $doctrineFile -Raw
    if ($content -match "User:") {
        Write-Host "   ‚úì Mappings des modules pr√©sents" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå Mappings des modules manquants" -ForegroundColor Red
    }
} else {
    Write-Host "   ‚ùå Fichier doctrine.yaml manquant" -ForegroundColor Red
    exit 1
}

# 2. Vider le cache
Write-Host ""
Write-Host "2. Vidage du cache..." -ForegroundColor Yellow
try {
    php bin/console cache:clear 2>$null
    Write-Host "   ‚úì Cache vid√©" -ForegroundColor Green
} catch {
    Write-Host "   ‚ö† Erreur lors du vidage du cache" -ForegroundColor Yellow
}

# 3. V√©rifier les mappings
Write-Host ""
Write-Host "3. V√©rification des mappings..." -ForegroundColor Yellow
try {
    $mappings = php bin/console doctrine:mapping:info 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "   ‚úì Mappings Doctrine configur√©s" -ForegroundColor Green
        
        # Compter les entit√©s des modules
        $moduleEntities = $mappings | Select-String "Modules\\"
        if ($moduleEntities) {
            Write-Host "   ‚úì Entit√©s des modules trouv√©es : $($moduleEntities.Count)" -ForegroundColor Green
        } else {
            Write-Host "   ‚ö† Aucune entit√© de module trouv√©e" -ForegroundColor Yellow
        }
    } else {
        Write-Host "   ‚ùå Erreur lors de la v√©rification des mappings" -ForegroundColor Red
    }
} catch {
    Write-Host "   ‚ö† Erreur lors de la v√©rification des mappings" -ForegroundColor Yellow
}

# 4. Mettre √† jour le sch√©ma
Write-Host ""
Write-Host "4. Mise √† jour du sch√©ma de base de donn√©es..." -ForegroundColor Yellow
try {
    php bin/console doctrine:schema:update --force 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "   ‚úì Sch√©ma mis √† jour" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö† Erreur lors de la mise √† jour du sch√©ma" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ö† Erreur lors de la mise √† jour du sch√©ma" -ForegroundColor Yellow
}

# 5. V√©rifier les tables
Write-Host ""
Write-Host "5. V√©rification des tables..." -ForegroundColor Yellow
try {
    $tables = & "C:\xampp\mysql\bin\mysql.exe" -u root -e "USE symfony_app; SHOW TABLES;" 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "   ‚úì Base de donn√©es accessible" -ForegroundColor Green
        
        # V√©rifier les tables importantes
        $importantTables = @('user', 'users', 'employees', 'clients', 'invoices', 'notifications')
        foreach ($table in $importantTables) {
            if ($tables -match $table) {
                Write-Host "   ‚úì Table '$table' pr√©sente" -ForegroundColor Green
            } else {
                Write-Host "   ‚ö† Table '$table' manquante" -ForegroundColor Yellow
            }
        }
    } else {
        Write-Host "   ‚ö† Erreur d'acc√®s √† la base de donn√©es" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ö† Erreur lors de la v√©rification des tables" -ForegroundColor Yellow
}

# 6. Test de l'application
Write-Host ""
Write-Host "6. Test de l'application..." -ForegroundColor Yellow
try {
    $testResult = php test-doctrine-mappings.php 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "   ‚úì Application fonctionnelle" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö† Probl√®mes d√©tect√©s dans l'application" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   ‚ö† Erreur lors du test de l'application" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "=== Correction termin√©e ===" -ForegroundColor Cyan
Write-Host "Les mappings Doctrine sont maintenant correctement configur√©s." -ForegroundColor White
Write-Host "Toutes les entit√©s des modules sont reconnues." -ForegroundColor White
Write-Host ""
Write-Host "üéâ Mappings Doctrine corrig√©s !" -ForegroundColor Green
